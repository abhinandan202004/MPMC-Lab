#include <lpc214x.h>
#include <stdio.h>

void wr_cn(void);
void clr_disp(void);
void delay(unsigned int);
void lcd_com(void);
void wr_dn(void);
void lcd_data(void);
void lcd_init(void);

unsigned char temp1;
unsigned long int temp, r = 0;

unsigned char *ptr, disp[] = "SVIT BENGALURU", disp1[] = "LCD INTERFACING";

int main() {
    // Configure P0.0 to P0.15 as GPIO
    PINSEL0 = 0x00000000;
    
    // Configure P0.2 to P0.7 as output lines for the LCD
    IO0DIR = 0x000000FC;
    
    // Initialize the LCD
    lcd_init();
    delay(3200);  // Delay for 1.06ms
    
    // Clear the display
    clr_disp();
    delay(3200);
    
    // Set display address to the second position of the first line
    temp1 = 0x81;
    lcd_com();
    
    // Display the first string "SVIT BENGALURU"
    ptr = disp;
    while (*ptr != '\0') {
        temp1 = *ptr;
        lcd_data();
        ptr++;
    }

    // Set display address to the first position of the second line
    temp1 = 0xC0;
    lcd_com();
    
    // Display the second string "LCD INTERFACING"
    ptr = disp1;
    while (*ptr != '\0') {
        temp1 = *ptr;
        lcd_data();
        ptr++;
    }

    while (1);  // Infinite loop to keep the display running
}

// LCD initialization routine
void lcd_init(void) {
    temp = 0x30;  // Command to test LCD voltage level
    wr_cn();
    delay(3200);
    
    temp = 0x30;  // Repeat the command
    wr_cn();
    delay(3200);
    
    temp = 0x30;  // Repeat the command
    wr_cn();
    delay(3200);
    
    temp = 0x20;  // Switch to 4-bit mode from default 8-bit mode
    wr_cn();
    delay(3200);
    
    temp1 = 0x28;  // LCD function set: 4-bit mode, 2-line display, 5x7 matrix
    lcd_com();
    delay(3200);
    
    temp1 = 0x0C;  // Display on, cursor off, blink off
    lcd_com();
    delay(800);
    
    temp1 = 0x06;  // Increment cursor after data entry
    lcd_com();
    delay(800);
    
    temp1 = 0x80;  // Set cursor to the beginning of line 1
    lcd_com();
    delay(800);
}

// Command nibble output routine
void wr_cn(void) {
    IO0CLR = 0x000000FC;  // Clear data lines
    IO0SET = temp;        // Output high nibble
    IO0CLR = 0x00000004;  // RS = 0 (command mode)
    IO0SET = 0x00000008;  // E = 1 (enable pulse)
    delay(10);            // Short delay
    IO0CLR = 0x00000008;  // E = 0
}

// Data nibble output routine
void wr_dn(void) {
    IO0CLR = 0x000000FC;  // Clear data lines
    IO0SET = temp;        // Output high nibble
    IO0SET = 0x00000004;  // RS = 1 (data mode)
    IO0SET = 0x00000008;  // E = 1 (enable pulse)
    delay(10);            // Short delay
    IO0CLR = 0x00000008;  // E = 0
}

// Command output routine (sends command to LCD)
void lcd_com(void) {
    temp = temp1 & 0xF0;  // Mask high nibble
    wr_cn();              // Send high nibble
    temp = (temp1 & 0x0F) << 4;  // Mask and shift low nibble
    wr_cn();              // Send low nibble
    delay(500);           // Short delay
}

// Data output routine (sends data to LCD)
void lcd_data(void) {
    temp = temp1 & 0xF0;  // Mask high nibble
    wr_dn();              // Send high nibble
    temp = (temp1 & 0x0F) << 4;  // Mask and shift low nibble
    wr_dn();              // Send low nibble
    delay(100);           // Short delay
}

// Function to clear the LCD screen
void clr_disp(void) {
    temp1 = 0x01;  // Clear display command
    lcd_com();
    delay(500);    // Delay for the clear operation
}

// Delay function
void delay(unsigned int r1) {
    for (r = 0; r < r1; r++);  // Simple delay loop
}
